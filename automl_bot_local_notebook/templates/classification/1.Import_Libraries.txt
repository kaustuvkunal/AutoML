<text>

This notebook is automatically generated by bot- : <B> Plexy </B><br/> An Auto-ML Solution for Classification, Regression and Deep-Learning problems 
<br/> <B>  Created By : Kaustuv Kunal</B>
<br/>Learning type : Classification

 
### Contents 

1. Import Libraries 
2. Read & Explore Data   
&nbsp;&nbsp;&nbsp;&nbsp; 2.1 Fetch data and separate features & target   
&nbsp;&nbsp;&nbsp;&nbsp; 2.2 Dataset Extract Summary & Shape     
&nbsp;&nbsp;&nbsp;&nbsp; 2.3 Target Variable Distribution      
&nbsp;&nbsp;&nbsp;&nbsp; 2.4 Missing Values     
&nbsp;&nbsp;&nbsp;&nbsp; 2.5 Variable Types    
&nbsp;&nbsp;&nbsp;&nbsp; 2.6 Variable Correlations 
3. Data Visualisation(EDA)   
4. Data Prepration & Cleaning  
&nbsp;&nbsp;&nbsp;&nbsp; 3.1 Missing Values Treatment     
&nbsp;&nbsp;&nbsp;&nbsp; 3.2 Encoding ( OneHot or Label ?) of categorical data    
&nbsp;&nbsp;&nbsp;&nbsp; 3.3 Train Test Split  
5. Data Modelling    
&nbsp;&nbsp;&nbsp;&nbsp; 5.1 Base Models     
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 5.1.1 Logistic Regression    
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 5.1.2 Decision Tree     
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 5.1.3 KNN     
&nbsp;&nbsp;&nbsp;&nbsp; 5.2 Bagging Ensemble Models    
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 5.2.1 Random Forest    
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 5.2.2 Extra Tree       
&nbsp;&nbsp;&nbsp;&nbsp; 5.3 Boosting Ensemble Models    
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 5.3.1 XGBoost    
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 5.3.2 LightGBM    
&nbsp;&nbsp;&nbsp;&nbsp; 5.4 How fair Models performed ?    
6. Advance Modeling   
&nbsp;&nbsp;&nbsp;&nbsp; 6.1 Voting Classifiers   
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 6.1.1 Hard Voting Classifier  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 6.1.2 Soft Voting Classifier  
&nbsp;&nbsp;&nbsp;&nbsp; 6.2 Stacking Model  
7. Submission File 
</text>


<text>
##  1. Import Libraries
Load the required libraries
</text>

<code>
## modelling libraries
from sklearn.metrics import confusion_matrix, roc_auc_score, roc_curve, auc
from sklearn.ensemble import RandomForestClassifier, ExtraTreesClassifier
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.model_selection import train_test_split, KFold
from sklearn.linear_model import LogisticRegression
from sklearn.tree import DecisionTreeClassifier
from xgboost  import XGBClassifier
from sklearn.svm import SVC
from sklearn.neighbors import KNeighborsClassifier
from lightgbm import LGBMClassifier
from sklearn.model_selection import RandomizedSearchCV
from sklearn.model_selection import cross_val_score
from sklearn.ensemble import VotingClassifier
from mlxtend.classifier import StackingCVClassifier
import warnings
warnings.simplefilter(action='ignore', category=FutureWarning)


## preprocessing libraries
from sklearn.preprocessing import LabelEncoder
from collections import Counter
import pandas as pd
import numpy as np 
import itertools
import os 

## visualization libraries
from wordcloud import WordCloud, STOPWORDS
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px


import warnings
warnings.simplefilter(action='ignore' )

print (" .. libraries imported  ")
</code>




